// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// AddRowReader is a Reader for the AddRow structure.
type AddRowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddRowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddRowCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddRowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddRowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddRowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddRowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddRowCreated creates a AddRowCreated with default headers values
func NewAddRowCreated() *AddRowCreated {
	return &AddRowCreated{}
}

/*AddRowCreated handles this case with default header values.

Created
*/
type AddRowCreated struct {
	Payload *models.RowsResponse
}

func (o *AddRowCreated) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables/{tableName}/rows][%d] addRowCreated  %+v", 201, o.Payload)
}

func (o *AddRowCreated) GetPayload() *models.RowsResponse {
	return o.Payload
}

func (o *AddRowCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RowsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRowBadRequest creates a AddRowBadRequest with default headers values
func NewAddRowBadRequest() *AddRowBadRequest {
	return &AddRowBadRequest{}
}

/*AddRowBadRequest handles this case with default header values.

Bad request
*/
type AddRowBadRequest struct {
	Payload *models.Error
}

func (o *AddRowBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables/{tableName}/rows][%d] addRowBadRequest  %+v", 400, o.Payload)
}

func (o *AddRowBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddRowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRowUnauthorized creates a AddRowUnauthorized with default headers values
func NewAddRowUnauthorized() *AddRowUnauthorized {
	return &AddRowUnauthorized{}
}

/*AddRowUnauthorized handles this case with default header values.

Unauthorized
*/
type AddRowUnauthorized struct {
	Payload *models.Error
}

func (o *AddRowUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables/{tableName}/rows][%d] addRowUnauthorized  %+v", 401, o.Payload)
}

func (o *AddRowUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddRowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRowForbidden creates a AddRowForbidden with default headers values
func NewAddRowForbidden() *AddRowForbidden {
	return &AddRowForbidden{}
}

/*AddRowForbidden handles this case with default header values.

Forbidden
*/
type AddRowForbidden struct {
	Payload *models.Error
}

func (o *AddRowForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables/{tableName}/rows][%d] addRowForbidden  %+v", 403, o.Payload)
}

func (o *AddRowForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddRowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRowInternalServerError creates a AddRowInternalServerError with default headers values
func NewAddRowInternalServerError() *AddRowInternalServerError {
	return &AddRowInternalServerError{}
}

/*AddRowInternalServerError handles this case with default header values.

Internal Server Error
*/
type AddRowInternalServerError struct {
	Payload *models.Error
}

func (o *AddRowInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables/{tableName}/rows][%d] addRowInternalServerError  %+v", 500, o.Payload)
}

func (o *AddRowInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddRowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
