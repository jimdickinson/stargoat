// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// GetRowWithWhereReader is a Reader for the GetRowWithWhere structure.
type GetRowWithWhereReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRowWithWhereReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRowWithWhereOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRowWithWhereBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRowWithWhereUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRowWithWhereInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRowWithWhereOK creates a GetRowWithWhereOK with default headers values
func NewGetRowWithWhereOK() *GetRowWithWhereOK {
	return &GetRowWithWhereOK{}
}

/*GetRowWithWhereOK handles this case with default header values.

OK
*/
type GetRowWithWhereOK struct {
	Payload *models.GetResponseWrapper
}

func (o *GetRowWithWhereOK) Error() string {
	return fmt.Sprintf("[GET /v2/keyspaces/{keyspaceName}/{tableName}][%d] getRowWithWhereOK  %+v", 200, o.Payload)
}

func (o *GetRowWithWhereOK) GetPayload() *models.GetResponseWrapper {
	return o.Payload
}

func (o *GetRowWithWhereOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetResponseWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRowWithWhereBadRequest creates a GetRowWithWhereBadRequest with default headers values
func NewGetRowWithWhereBadRequest() *GetRowWithWhereBadRequest {
	return &GetRowWithWhereBadRequest{}
}

/*GetRowWithWhereBadRequest handles this case with default header values.

Bad Request
*/
type GetRowWithWhereBadRequest struct {
	Payload *models.Error
}

func (o *GetRowWithWhereBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/keyspaces/{keyspaceName}/{tableName}][%d] getRowWithWhereBadRequest  %+v", 400, o.Payload)
}

func (o *GetRowWithWhereBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRowWithWhereBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRowWithWhereUnauthorized creates a GetRowWithWhereUnauthorized with default headers values
func NewGetRowWithWhereUnauthorized() *GetRowWithWhereUnauthorized {
	return &GetRowWithWhereUnauthorized{}
}

/*GetRowWithWhereUnauthorized handles this case with default header values.

Unauthorized
*/
type GetRowWithWhereUnauthorized struct {
	Payload *models.Error
}

func (o *GetRowWithWhereUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/keyspaces/{keyspaceName}/{tableName}][%d] getRowWithWhereUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRowWithWhereUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRowWithWhereUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRowWithWhereInternalServerError creates a GetRowWithWhereInternalServerError with default headers values
func NewGetRowWithWhereInternalServerError() *GetRowWithWhereInternalServerError {
	return &GetRowWithWhereInternalServerError{}
}

/*GetRowWithWhereInternalServerError handles this case with default header values.

Internal server error
*/
type GetRowWithWhereInternalServerError struct {
	Payload *models.Error
}

func (o *GetRowWithWhereInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/keyspaces/{keyspaceName}/{tableName}][%d] getRowWithWhereInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRowWithWhereInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRowWithWhereInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
