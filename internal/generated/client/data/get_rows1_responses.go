// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// GetRows1Reader is a Reader for the GetRows1 structure.
type GetRows1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRows1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRows1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRows1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRows1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRows1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRows1OK creates a GetRows1OK with default headers values
func NewGetRows1OK() *GetRows1OK {
	return &GetRows1OK{}
}

/*GetRows1OK handles this case with default header values.

OK
*/
type GetRows1OK struct {
	Payload *models.GetResponseWrapper
}

func (o *GetRows1OK) Error() string {
	return fmt.Sprintf("[GET /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] getRows1OK  %+v", 200, o.Payload)
}

func (o *GetRows1OK) GetPayload() *models.GetResponseWrapper {
	return o.Payload
}

func (o *GetRows1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetResponseWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRows1BadRequest creates a GetRows1BadRequest with default headers values
func NewGetRows1BadRequest() *GetRows1BadRequest {
	return &GetRows1BadRequest{}
}

/*GetRows1BadRequest handles this case with default header values.

Bad Request
*/
type GetRows1BadRequest struct {
	Payload *models.Error
}

func (o *GetRows1BadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] getRows1BadRequest  %+v", 400, o.Payload)
}

func (o *GetRows1BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRows1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRows1Unauthorized creates a GetRows1Unauthorized with default headers values
func NewGetRows1Unauthorized() *GetRows1Unauthorized {
	return &GetRows1Unauthorized{}
}

/*GetRows1Unauthorized handles this case with default header values.

Unauthorized
*/
type GetRows1Unauthorized struct {
	Payload *models.Error
}

func (o *GetRows1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] getRows1Unauthorized  %+v", 401, o.Payload)
}

func (o *GetRows1Unauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRows1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRows1InternalServerError creates a GetRows1InternalServerError with default headers values
func NewGetRows1InternalServerError() *GetRows1InternalServerError {
	return &GetRows1InternalServerError{}
}

/*GetRows1InternalServerError handles this case with default header values.

Internal server error
*/
type GetRows1InternalServerError struct {
	Payload *models.Error
}

func (o *GetRows1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] getRows1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetRows1InternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRows1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
