// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// PatchRowsReader is a Reader for the PatchRows structure.
type PatchRowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchRowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchRowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchRowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchRowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchRowsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchRowsOK creates a PatchRowsOK with default headers values
func NewPatchRowsOK() *PatchRowsOK {
	return &PatchRowsOK{}
}

/*PatchRowsOK handles this case with default header values.

resource updated
*/
type PatchRowsOK struct {
	Payload *models.ResponseWrapper
}

func (o *PatchRowsOK) Error() string {
	return fmt.Sprintf("[PATCH /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] patchRowsOK  %+v", 200, o.Payload)
}

func (o *PatchRowsOK) GetPayload() *models.ResponseWrapper {
	return o.Payload
}

func (o *PatchRowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRowsBadRequest creates a PatchRowsBadRequest with default headers values
func NewPatchRowsBadRequest() *PatchRowsBadRequest {
	return &PatchRowsBadRequest{}
}

/*PatchRowsBadRequest handles this case with default header values.

Bad Request
*/
type PatchRowsBadRequest struct {
	Payload *models.Error
}

func (o *PatchRowsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] patchRowsBadRequest  %+v", 400, o.Payload)
}

func (o *PatchRowsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchRowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRowsUnauthorized creates a PatchRowsUnauthorized with default headers values
func NewPatchRowsUnauthorized() *PatchRowsUnauthorized {
	return &PatchRowsUnauthorized{}
}

/*PatchRowsUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchRowsUnauthorized struct {
	Payload *models.Error
}

func (o *PatchRowsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] patchRowsUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchRowsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchRowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRowsInternalServerError creates a PatchRowsInternalServerError with default headers values
func NewPatchRowsInternalServerError() *PatchRowsInternalServerError {
	return &PatchRowsInternalServerError{}
}

/*PatchRowsInternalServerError handles this case with default header values.

Internal server error
*/
type PatchRowsInternalServerError struct {
	Payload *models.Error
}

func (o *PatchRowsInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] patchRowsInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchRowsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchRowsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
