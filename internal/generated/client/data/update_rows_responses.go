// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// UpdateRowsReader is a Reader for the UpdateRows structure.
type UpdateRowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateRowsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRowsOK creates a UpdateRowsOK with default headers values
func NewUpdateRowsOK() *UpdateRowsOK {
	return &UpdateRowsOK{}
}

/*UpdateRowsOK handles this case with default header values.

resource updated
*/
type UpdateRowsOK struct {
	Payload interface{}
}

func (o *UpdateRowsOK) Error() string {
	return fmt.Sprintf("[PUT /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] updateRowsOK  %+v", 200, o.Payload)
}

func (o *UpdateRowsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRowsBadRequest creates a UpdateRowsBadRequest with default headers values
func NewUpdateRowsBadRequest() *UpdateRowsBadRequest {
	return &UpdateRowsBadRequest{}
}

/*UpdateRowsBadRequest handles this case with default header values.

Bad Request
*/
type UpdateRowsBadRequest struct {
	Payload *models.Error
}

func (o *UpdateRowsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] updateRowsBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateRowsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateRowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRowsUnauthorized creates a UpdateRowsUnauthorized with default headers values
func NewUpdateRowsUnauthorized() *UpdateRowsUnauthorized {
	return &UpdateRowsUnauthorized{}
}

/*UpdateRowsUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateRowsUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateRowsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] updateRowsUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateRowsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateRowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRowsInternalServerError creates a UpdateRowsInternalServerError with default headers values
func NewUpdateRowsInternalServerError() *UpdateRowsInternalServerError {
	return &UpdateRowsInternalServerError{}
}

/*UpdateRowsInternalServerError handles this case with default header values.

Internal server error
*/
type UpdateRowsInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateRowsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}][%d] updateRowsInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateRowsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateRowsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
