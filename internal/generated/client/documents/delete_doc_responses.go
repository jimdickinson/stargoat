// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// DeleteDocReader is a Reader for the DeleteDoc structure.
type DeleteDocReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDocReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteDocNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteDocUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDocForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDocInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDocNoContent creates a DeleteDocNoContent with default headers values
func NewDeleteDocNoContent() *DeleteDocNoContent {
	return &DeleteDocNoContent{}
}

/*DeleteDocNoContent handles this case with default header values.

No Content
*/
type DeleteDocNoContent struct {
}

func (o *DeleteDocNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] deleteDocNoContent ", 204)
}

func (o *DeleteDocNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDocUnauthorized creates a DeleteDocUnauthorized with default headers values
func NewDeleteDocUnauthorized() *DeleteDocUnauthorized {
	return &DeleteDocUnauthorized{}
}

/*DeleteDocUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteDocUnauthorized struct {
}

func (o *DeleteDocUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] deleteDocUnauthorized ", 401)
}

func (o *DeleteDocUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDocForbidden creates a DeleteDocForbidden with default headers values
func NewDeleteDocForbidden() *DeleteDocForbidden {
	return &DeleteDocForbidden{}
}

/*DeleteDocForbidden handles this case with default header values.

Forbidden
*/
type DeleteDocForbidden struct {
}

func (o *DeleteDocForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] deleteDocForbidden ", 403)
}

func (o *DeleteDocForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDocInternalServerError creates a DeleteDocInternalServerError with default headers values
func NewDeleteDocInternalServerError() *DeleteDocInternalServerError {
	return &DeleteDocInternalServerError{}
}

/*DeleteDocInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteDocInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteDocInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] deleteDocInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDocInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteDocInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
