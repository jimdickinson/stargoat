// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// GetOneNamespaceReader is a Reader for the GetOneNamespace structure.
type GetOneNamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOneNamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOneNamespaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOneNamespaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOneNamespaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOneNamespaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOneNamespaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOneNamespaceOK creates a GetOneNamespaceOK with default headers values
func NewGetOneNamespaceOK() *GetOneNamespaceOK {
	return &GetOneNamespaceOK{}
}

/*GetOneNamespaceOK handles this case with default header values.

OK
*/
type GetOneNamespaceOK struct {
	Payload *models.Keyspace
}

func (o *GetOneNamespaceOK) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/namespaces/{namespace-id}][%d] getOneNamespaceOK  %+v", 200, o.Payload)
}

func (o *GetOneNamespaceOK) GetPayload() *models.Keyspace {
	return o.Payload
}

func (o *GetOneNamespaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Keyspace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOneNamespaceBadRequest creates a GetOneNamespaceBadRequest with default headers values
func NewGetOneNamespaceBadRequest() *GetOneNamespaceBadRequest {
	return &GetOneNamespaceBadRequest{}
}

/*GetOneNamespaceBadRequest handles this case with default header values.

Bad Request
*/
type GetOneNamespaceBadRequest struct {
}

func (o *GetOneNamespaceBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/namespaces/{namespace-id}][%d] getOneNamespaceBadRequest ", 400)
}

func (o *GetOneNamespaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOneNamespaceUnauthorized creates a GetOneNamespaceUnauthorized with default headers values
func NewGetOneNamespaceUnauthorized() *GetOneNamespaceUnauthorized {
	return &GetOneNamespaceUnauthorized{}
}

/*GetOneNamespaceUnauthorized handles this case with default header values.

Unauthorized
*/
type GetOneNamespaceUnauthorized struct {
}

func (o *GetOneNamespaceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/namespaces/{namespace-id}][%d] getOneNamespaceUnauthorized ", 401)
}

func (o *GetOneNamespaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOneNamespaceNotFound creates a GetOneNamespaceNotFound with default headers values
func NewGetOneNamespaceNotFound() *GetOneNamespaceNotFound {
	return &GetOneNamespaceNotFound{}
}

/*GetOneNamespaceNotFound handles this case with default header values.

Not Found
*/
type GetOneNamespaceNotFound struct {
}

func (o *GetOneNamespaceNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/namespaces/{namespace-id}][%d] getOneNamespaceNotFound ", 404)
}

func (o *GetOneNamespaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOneNamespaceInternalServerError creates a GetOneNamespaceInternalServerError with default headers values
func NewGetOneNamespaceInternalServerError() *GetOneNamespaceInternalServerError {
	return &GetOneNamespaceInternalServerError{}
}

/*GetOneNamespaceInternalServerError handles this case with default header values.

Internal server error
*/
type GetOneNamespaceInternalServerError struct {
	Payload *models.Error
}

func (o *GetOneNamespaceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/namespaces/{namespace-id}][%d] getOneNamespaceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOneNamespaceInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOneNamespaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
