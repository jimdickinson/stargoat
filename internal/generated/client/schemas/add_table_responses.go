// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// AddTableReader is a Reader for the AddTable structure.
type AddTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddTableCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddTableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddTableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddTableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddTableCreated creates a AddTableCreated with default headers values
func NewAddTableCreated() *AddTableCreated {
	return &AddTableCreated{}
}

/*AddTableCreated handles this case with default header values.

Created
*/
type AddTableCreated struct {
	Payload *models.SuccessResponse
}

func (o *AddTableCreated) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables][%d] addTableCreated  %+v", 201, o.Payload)
}

func (o *AddTableCreated) GetPayload() *models.SuccessResponse {
	return o.Payload
}

func (o *AddTableCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTableBadRequest creates a AddTableBadRequest with default headers values
func NewAddTableBadRequest() *AddTableBadRequest {
	return &AddTableBadRequest{}
}

/*AddTableBadRequest handles this case with default header values.

Bad request
*/
type AddTableBadRequest struct {
	Payload *models.Error
}

func (o *AddTableBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables][%d] addTableBadRequest  %+v", 400, o.Payload)
}

func (o *AddTableBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddTableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTableUnauthorized creates a AddTableUnauthorized with default headers values
func NewAddTableUnauthorized() *AddTableUnauthorized {
	return &AddTableUnauthorized{}
}

/*AddTableUnauthorized handles this case with default header values.

Unauthorized
*/
type AddTableUnauthorized struct {
	Payload *models.Error
}

func (o *AddTableUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables][%d] addTableUnauthorized  %+v", 401, o.Payload)
}

func (o *AddTableUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTableForbidden creates a AddTableForbidden with default headers values
func NewAddTableForbidden() *AddTableForbidden {
	return &AddTableForbidden{}
}

/*AddTableForbidden handles this case with default header values.

Forbidden
*/
type AddTableForbidden struct {
	Payload *models.Error
}

func (o *AddTableForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables][%d] addTableForbidden  %+v", 403, o.Payload)
}

func (o *AddTableForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddTableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTableInternalServerError creates a AddTableInternalServerError with default headers values
func NewAddTableInternalServerError() *AddTableInternalServerError {
	return &AddTableInternalServerError{}
}

/*AddTableInternalServerError handles this case with default header values.

Internal Server Error
*/
type AddTableInternalServerError struct {
	Payload *models.Error
}

func (o *AddTableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/keyspaces/{keyspaceName}/tables][%d] addTableInternalServerError  %+v", 500, o.Payload)
}

func (o *AddTableInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddTableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
