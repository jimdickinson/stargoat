// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// DeleteTable1Reader is a Reader for the DeleteTable1 structure.
type DeleteTable1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTable1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTable1NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteTable1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTable1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteTable1NoContent creates a DeleteTable1NoContent with default headers values
func NewDeleteTable1NoContent() *DeleteTable1NoContent {
	return &DeleteTable1NoContent{}
}

/*DeleteTable1NoContent handles this case with default header values.

No Content
*/
type DeleteTable1NoContent struct {
}

func (o *DeleteTable1NoContent) Error() string {
	return fmt.Sprintf("[DELETE /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTable1NoContent ", 204)
}

func (o *DeleteTable1NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTable1Unauthorized creates a DeleteTable1Unauthorized with default headers values
func NewDeleteTable1Unauthorized() *DeleteTable1Unauthorized {
	return &DeleteTable1Unauthorized{}
}

/*DeleteTable1Unauthorized handles this case with default header values.

Unauthorized
*/
type DeleteTable1Unauthorized struct {
	Payload *models.Error
}

func (o *DeleteTable1Unauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTable1Unauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTable1Unauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTable1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTable1InternalServerError creates a DeleteTable1InternalServerError with default headers values
func NewDeleteTable1InternalServerError() *DeleteTable1InternalServerError {
	return &DeleteTable1InternalServerError{}
}

/*DeleteTable1InternalServerError handles this case with default header values.

Internal server error
*/
type DeleteTable1InternalServerError struct {
	Payload *models.Error
}

func (o *DeleteTable1InternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTable1InternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTable1InternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTable1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
