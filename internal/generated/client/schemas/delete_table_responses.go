// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// DeleteTableReader is a Reader for the DeleteTable structure.
type DeleteTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTableNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteTableNoContent creates a DeleteTableNoContent with default headers values
func NewDeleteTableNoContent() *DeleteTableNoContent {
	return &DeleteTableNoContent{}
}

/*DeleteTableNoContent handles this case with default header values.

No Content
*/
type DeleteTableNoContent struct {
}

func (o *DeleteTableNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTableNoContent ", 204)
}

func (o *DeleteTableNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTableBadRequest creates a DeleteTableBadRequest with default headers values
func NewDeleteTableBadRequest() *DeleteTableBadRequest {
	return &DeleteTableBadRequest{}
}

/*DeleteTableBadRequest handles this case with default header values.

Bad request
*/
type DeleteTableBadRequest struct {
	Payload *models.Error
}

func (o *DeleteTableBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTableBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTableBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTableUnauthorized creates a DeleteTableUnauthorized with default headers values
func NewDeleteTableUnauthorized() *DeleteTableUnauthorized {
	return &DeleteTableUnauthorized{}
}

/*DeleteTableUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteTableUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteTableUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTableUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTableUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTableForbidden creates a DeleteTableForbidden with default headers values
func NewDeleteTableForbidden() *DeleteTableForbidden {
	return &DeleteTableForbidden{}
}

/*DeleteTableForbidden handles this case with default header values.

Forbidden
*/
type DeleteTableForbidden struct {
	Payload *models.Error
}

func (o *DeleteTableForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTableForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTableForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTableNotFound creates a DeleteTableNotFound with default headers values
func NewDeleteTableNotFound() *DeleteTableNotFound {
	return &DeleteTableNotFound{}
}

/*DeleteTableNotFound handles this case with default header values.

Not Found
*/
type DeleteTableNotFound struct {
	Payload *models.Error
}

func (o *DeleteTableNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTableNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTableNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTableInternalServerError creates a DeleteTableInternalServerError with default headers values
func NewDeleteTableInternalServerError() *DeleteTableInternalServerError {
	return &DeleteTableInternalServerError{}
}

/*DeleteTableInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteTableInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteTableInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/keyspaces/{keyspaceName}/tables/{tableName}][%d] deleteTableInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTableInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
