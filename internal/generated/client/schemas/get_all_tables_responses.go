// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// GetAllTablesReader is a Reader for the GetAllTables structure.
type GetAllTablesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllTablesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllTablesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllTablesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllTablesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllTablesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllTablesOK creates a GetAllTablesOK with default headers values
func NewGetAllTablesOK() *GetAllTablesOK {
	return &GetAllTablesOK{}
}

/*GetAllTablesOK handles this case with default header values.

OK
*/
type GetAllTablesOK struct {
	Payload *models.ResponseWrapper
}

func (o *GetAllTablesOK) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/keyspaces/{keyspaceName}/tables][%d] getAllTablesOK  %+v", 200, o.Payload)
}

func (o *GetAllTablesOK) GetPayload() *models.ResponseWrapper {
	return o.Payload
}

func (o *GetAllTablesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllTablesUnauthorized creates a GetAllTablesUnauthorized with default headers values
func NewGetAllTablesUnauthorized() *GetAllTablesUnauthorized {
	return &GetAllTablesUnauthorized{}
}

/*GetAllTablesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllTablesUnauthorized struct {
	Payload *models.Error
}

func (o *GetAllTablesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/keyspaces/{keyspaceName}/tables][%d] getAllTablesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAllTablesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllTablesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllTablesNotFound creates a GetAllTablesNotFound with default headers values
func NewGetAllTablesNotFound() *GetAllTablesNotFound {
	return &GetAllTablesNotFound{}
}

/*GetAllTablesNotFound handles this case with default header values.

Not Found
*/
type GetAllTablesNotFound struct {
	Payload *models.Error
}

func (o *GetAllTablesNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/keyspaces/{keyspaceName}/tables][%d] getAllTablesNotFound  %+v", 404, o.Payload)
}

func (o *GetAllTablesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllTablesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllTablesInternalServerError creates a GetAllTablesInternalServerError with default headers values
func NewGetAllTablesInternalServerError() *GetAllTablesInternalServerError {
	return &GetAllTablesInternalServerError{}
}

/*GetAllTablesInternalServerError handles this case with default header values.

Internal server error
*/
type GetAllTablesInternalServerError struct {
	Payload *models.Error
}

func (o *GetAllTablesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/schemas/keyspaces/{keyspaceName}/tables][%d] getAllTablesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllTablesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllTablesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
