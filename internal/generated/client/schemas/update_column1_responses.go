// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/internal/generated/models"
)

// UpdateColumn1Reader is a Reader for the UpdateColumn1 structure.
type UpdateColumn1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateColumn1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateColumn1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateColumn1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateColumn1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateColumn1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateColumn1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateColumn1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateColumn1OK creates a UpdateColumn1OK with default headers values
func NewUpdateColumn1OK() *UpdateColumn1OK {
	return &UpdateColumn1OK{}
}

/*UpdateColumn1OK handles this case with default header values.

OK
*/
type UpdateColumn1OK struct {
	Payload map[string]interface{}
}

func (o *UpdateColumn1OK) Error() string {
	return fmt.Sprintf("[PUT /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] updateColumn1OK  %+v", 200, o.Payload)
}

func (o *UpdateColumn1OK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *UpdateColumn1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateColumn1BadRequest creates a UpdateColumn1BadRequest with default headers values
func NewUpdateColumn1BadRequest() *UpdateColumn1BadRequest {
	return &UpdateColumn1BadRequest{}
}

/*UpdateColumn1BadRequest handles this case with default header values.

Bad request
*/
type UpdateColumn1BadRequest struct {
	Payload *models.Error
}

func (o *UpdateColumn1BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] updateColumn1BadRequest  %+v", 400, o.Payload)
}

func (o *UpdateColumn1BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateColumn1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateColumn1Unauthorized creates a UpdateColumn1Unauthorized with default headers values
func NewUpdateColumn1Unauthorized() *UpdateColumn1Unauthorized {
	return &UpdateColumn1Unauthorized{}
}

/*UpdateColumn1Unauthorized handles this case with default header values.

Unauthorized
*/
type UpdateColumn1Unauthorized struct {
	Payload *models.Error
}

func (o *UpdateColumn1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] updateColumn1Unauthorized  %+v", 401, o.Payload)
}

func (o *UpdateColumn1Unauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateColumn1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateColumn1Forbidden creates a UpdateColumn1Forbidden with default headers values
func NewUpdateColumn1Forbidden() *UpdateColumn1Forbidden {
	return &UpdateColumn1Forbidden{}
}

/*UpdateColumn1Forbidden handles this case with default header values.

Forbidden
*/
type UpdateColumn1Forbidden struct {
	Payload *models.Error
}

func (o *UpdateColumn1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] updateColumn1Forbidden  %+v", 403, o.Payload)
}

func (o *UpdateColumn1Forbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateColumn1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateColumn1NotFound creates a UpdateColumn1NotFound with default headers values
func NewUpdateColumn1NotFound() *UpdateColumn1NotFound {
	return &UpdateColumn1NotFound{}
}

/*UpdateColumn1NotFound handles this case with default header values.

Not Found
*/
type UpdateColumn1NotFound struct {
	Payload *models.Error
}

func (o *UpdateColumn1NotFound) Error() string {
	return fmt.Sprintf("[PUT /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] updateColumn1NotFound  %+v", 404, o.Payload)
}

func (o *UpdateColumn1NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateColumn1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateColumn1InternalServerError creates a UpdateColumn1InternalServerError with default headers values
func NewUpdateColumn1InternalServerError() *UpdateColumn1InternalServerError {
	return &UpdateColumn1InternalServerError{}
}

/*UpdateColumn1InternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateColumn1InternalServerError struct {
	Payload *models.Error
}

func (o *UpdateColumn1InternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] updateColumn1InternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateColumn1InternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateColumn1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
