// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/pkg/models"
)

// DeleteNamespaceReader is a Reader for the DeleteNamespace structure.
type DeleteNamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteNamespaceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteNamespaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNamespaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteNamespaceNoContent creates a DeleteNamespaceNoContent with default headers values
func NewDeleteNamespaceNoContent() *DeleteNamespaceNoContent {
	return &DeleteNamespaceNoContent{}
}

/*DeleteNamespaceNoContent handles this case with default header values.

No Content
*/
type DeleteNamespaceNoContent struct {
}

func (o *DeleteNamespaceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v2/schemas/namespaces/{namespace-id}][%d] deleteNamespaceNoContent ", 204)
}

func (o *DeleteNamespaceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNamespaceUnauthorized creates a DeleteNamespaceUnauthorized with default headers values
func NewDeleteNamespaceUnauthorized() *DeleteNamespaceUnauthorized {
	return &DeleteNamespaceUnauthorized{}
}

/*DeleteNamespaceUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteNamespaceUnauthorized struct {
}

func (o *DeleteNamespaceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v2/schemas/namespaces/{namespace-id}][%d] deleteNamespaceUnauthorized ", 401)
}

func (o *DeleteNamespaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNamespaceInternalServerError creates a DeleteNamespaceInternalServerError with default headers values
func NewDeleteNamespaceInternalServerError() *DeleteNamespaceInternalServerError {
	return &DeleteNamespaceInternalServerError{}
}

/*DeleteNamespaceInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteNamespaceInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteNamespaceInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v2/schemas/namespaces/{namespace-id}][%d] deleteNamespaceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteNamespaceInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteNamespaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
