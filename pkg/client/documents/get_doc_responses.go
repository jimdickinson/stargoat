// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/pkg/models"
)

// GetDocReader is a Reader for the GetDoc structure.
type GetDocReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDocReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDocOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetDocNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDocBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDocUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDocForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDocInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDocOK creates a GetDocOK with default headers values
func NewGetDocOK() *GetDocOK {
	return &GetDocOK{}
}

/*GetDocOK handles this case with default header values.

OK
*/
type GetDocOK struct {
	Payload *models.DocumentResponseWrapper
}

func (o *GetDocOK) Error() string {
	return fmt.Sprintf("[GET /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] getDocOK  %+v", 200, o.Payload)
}

func (o *GetDocOK) GetPayload() *models.DocumentResponseWrapper {
	return o.Payload
}

func (o *GetDocOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DocumentResponseWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDocNoContent creates a GetDocNoContent with default headers values
func NewGetDocNoContent() *GetDocNoContent {
	return &GetDocNoContent{}
}

/*GetDocNoContent handles this case with default header values.

No Content
*/
type GetDocNoContent struct {
}

func (o *GetDocNoContent) Error() string {
	return fmt.Sprintf("[GET /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] getDocNoContent ", 204)
}

func (o *GetDocNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDocBadRequest creates a GetDocBadRequest with default headers values
func NewGetDocBadRequest() *GetDocBadRequest {
	return &GetDocBadRequest{}
}

/*GetDocBadRequest handles this case with default header values.

Bad Request
*/
type GetDocBadRequest struct {
}

func (o *GetDocBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] getDocBadRequest ", 400)
}

func (o *GetDocBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDocUnauthorized creates a GetDocUnauthorized with default headers values
func NewGetDocUnauthorized() *GetDocUnauthorized {
	return &GetDocUnauthorized{}
}

/*GetDocUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDocUnauthorized struct {
}

func (o *GetDocUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] getDocUnauthorized ", 401)
}

func (o *GetDocUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDocForbidden creates a GetDocForbidden with default headers values
func NewGetDocForbidden() *GetDocForbidden {
	return &GetDocForbidden{}
}

/*GetDocForbidden handles this case with default header values.

Forbidden
*/
type GetDocForbidden struct {
}

func (o *GetDocForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] getDocForbidden ", 403)
}

func (o *GetDocForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDocInternalServerError creates a GetDocInternalServerError with default headers values
func NewGetDocInternalServerError() *GetDocInternalServerError {
	return &GetDocInternalServerError{}
}

/*GetDocInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDocInternalServerError struct {
	Payload *models.Error
}

func (o *GetDocInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}][%d] getDocInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDocInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDocInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
