// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/pkg/models"
)

// PostDocReader is a Reader for the PostDoc structure.
type PostDocReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDocReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostDocCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDocBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDocUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDocForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDocInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDocCreated creates a PostDocCreated with default headers values
func NewPostDocCreated() *PostDocCreated {
	return &PostDocCreated{}
}

/*PostDocCreated handles this case with default header values.

Created
*/
type PostDocCreated struct {
	Payload *models.WriteDocResponse
}

func (o *PostDocCreated) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/{namespace-id}/collections/{collection-id}][%d] postDocCreated  %+v", 201, o.Payload)
}

func (o *PostDocCreated) GetPayload() *models.WriteDocResponse {
	return o.Payload
}

func (o *PostDocCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WriteDocResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDocBadRequest creates a PostDocBadRequest with default headers values
func NewPostDocBadRequest() *PostDocBadRequest {
	return &PostDocBadRequest{}
}

/*PostDocBadRequest handles this case with default header values.

Bad request
*/
type PostDocBadRequest struct {
}

func (o *PostDocBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/{namespace-id}/collections/{collection-id}][%d] postDocBadRequest ", 400)
}

func (o *PostDocBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDocUnauthorized creates a PostDocUnauthorized with default headers values
func NewPostDocUnauthorized() *PostDocUnauthorized {
	return &PostDocUnauthorized{}
}

/*PostDocUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDocUnauthorized struct {
}

func (o *PostDocUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/{namespace-id}/collections/{collection-id}][%d] postDocUnauthorized ", 401)
}

func (o *PostDocUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDocForbidden creates a PostDocForbidden with default headers values
func NewPostDocForbidden() *PostDocForbidden {
	return &PostDocForbidden{}
}

/*PostDocForbidden handles this case with default header values.

Forbidden
*/
type PostDocForbidden struct {
}

func (o *PostDocForbidden) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/{namespace-id}/collections/{collection-id}][%d] postDocForbidden ", 403)
}

func (o *PostDocForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDocInternalServerError creates a PostDocInternalServerError with default headers values
func NewPostDocInternalServerError() *PostDocInternalServerError {
	return &PostDocInternalServerError{}
}

/*PostDocInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDocInternalServerError struct {
	Payload *models.Error
}

func (o *PostDocInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v2/namespaces/{namespace-id}/collections/{collection-id}][%d] postDocInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDocInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDocInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
