// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jimdickinson/stargoat/pkg/models"
)

// GetOneColumnReader is a Reader for the GetOneColumn structure.
type GetOneColumnReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOneColumnReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOneColumnOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOneColumnBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOneColumnUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOneColumnForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOneColumnNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOneColumnInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOneColumnOK creates a GetOneColumnOK with default headers values
func NewGetOneColumnOK() *GetOneColumnOK {
	return &GetOneColumnOK{}
}

/*GetOneColumnOK handles this case with default header values.

OK
*/
type GetOneColumnOK struct {
}

func (o *GetOneColumnOK) Error() string {
	return fmt.Sprintf("[GET /v1/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] getOneColumnOK ", 200)
}

func (o *GetOneColumnOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOneColumnBadRequest creates a GetOneColumnBadRequest with default headers values
func NewGetOneColumnBadRequest() *GetOneColumnBadRequest {
	return &GetOneColumnBadRequest{}
}

/*GetOneColumnBadRequest handles this case with default header values.

Bad request
*/
type GetOneColumnBadRequest struct {
	Payload *models.Error
}

func (o *GetOneColumnBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] getOneColumnBadRequest  %+v", 400, o.Payload)
}

func (o *GetOneColumnBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOneColumnBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOneColumnUnauthorized creates a GetOneColumnUnauthorized with default headers values
func NewGetOneColumnUnauthorized() *GetOneColumnUnauthorized {
	return &GetOneColumnUnauthorized{}
}

/*GetOneColumnUnauthorized handles this case with default header values.

Unauthorized
*/
type GetOneColumnUnauthorized struct {
	Payload *models.Error
}

func (o *GetOneColumnUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] getOneColumnUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOneColumnUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOneColumnUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOneColumnForbidden creates a GetOneColumnForbidden with default headers values
func NewGetOneColumnForbidden() *GetOneColumnForbidden {
	return &GetOneColumnForbidden{}
}

/*GetOneColumnForbidden handles this case with default header values.

Forbidden
*/
type GetOneColumnForbidden struct {
	Payload *models.Error
}

func (o *GetOneColumnForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] getOneColumnForbidden  %+v", 403, o.Payload)
}

func (o *GetOneColumnForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOneColumnForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOneColumnNotFound creates a GetOneColumnNotFound with default headers values
func NewGetOneColumnNotFound() *GetOneColumnNotFound {
	return &GetOneColumnNotFound{}
}

/*GetOneColumnNotFound handles this case with default header values.

Not Found
*/
type GetOneColumnNotFound struct {
	Payload *models.Error
}

func (o *GetOneColumnNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] getOneColumnNotFound  %+v", 404, o.Payload)
}

func (o *GetOneColumnNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOneColumnNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOneColumnInternalServerError creates a GetOneColumnInternalServerError with default headers values
func NewGetOneColumnInternalServerError() *GetOneColumnInternalServerError {
	return &GetOneColumnInternalServerError{}
}

/*GetOneColumnInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetOneColumnInternalServerError struct {
	Payload *models.Error
}

func (o *GetOneColumnInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}][%d] getOneColumnInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOneColumnInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOneColumnInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
