// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PrimaryKey Defines a column list for the primary key. Can be either a single column, compound primary key, or composite partition key. Provide multiple columns for the partition key to define a composite partition key.
//
// swagger:model PrimaryKey
type PrimaryKey struct {

	// Name of the column or columns that constitute the clustering key.
	ClusteringKey []string `json:"clusteringKey"`

	// Name of the column(s) that constitute the partition key.
	// Required: true
	PartitionKey []string `json:"partitionKey"`
}

// Validate validates this primary key
func (m *PrimaryKey) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePartitionKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PrimaryKey) validatePartitionKey(formats strfmt.Registry) error {

	if err := validate.Required("partitionKey", "body", m.PartitionKey); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PrimaryKey) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PrimaryKey) UnmarshalBinary(b []byte) error {
	var res PrimaryKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
