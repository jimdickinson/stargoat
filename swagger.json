{
  "swagger": "2.0",
  "tags": [
    {
      "name": "documents"
    },
    {
      "name": "schemas"
    },
    {
      "name": "data"
    }
  ],
  "paths": {
    "/v2/namespaces/{namespace-id}/collections": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "List collections in namespace",
        "description": "",
        "operationId": "getCollections",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace to fetch collections for",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseWrapper"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Create a new empty collection in a namespace",
        "description": "",
        "operationId": "createCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace to create the collection in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON with the name of the collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/namespaces/{namespace-id}/collections/{collection-id}/upgrade": {
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Upgrade a collection in a namespace",
        "description": "WARNING: This endpoint is expected to cause some down-time for the collection you choose.",
        "operationId": "upgradeCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace containing the collection to upgrade",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the collection to upgrade",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON with the upgrade type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseWrapper"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Collection not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/namespaces/{namespace-id}/collections/{collection-id}": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Search documents in a collection",
        "description": "Page over documents in a collection, with optional search parameters. Does not perform well for large documents.",
        "operationId": "searchDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "where",
            "in": "query",
            "description": "a JSON blob with search filters, allowed operators: $eq, $ne, $in, $nin, $gt, $lt, $gte, $lte, $exists",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "the field names that you want to restrict the results to",
            "required": false,
            "type": "string"
          },
          {
            "name": "page-size",
            "in": "query",
            "description": "the max number of documents to return, max 20",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "page-state",
            "in": "query",
            "description": "Cassandra page state, used for pagination on consecutive requests",
            "required": false,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentResponseWrapper"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Create a new document",
        "description": "Auto-generates an ID for the newly created document",
        "operationId": "postDoc",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The JSON document",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/WriteDocResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete a collection in a namespace",
        "description": "",
        "operationId": "deleteCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace containing the collection to delete",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the collection to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Get a document",
        "description": "Retrieve the JSON representation of the document",
        "operationId": "getDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "the name of the document",
            "required": true,
            "type": "string"
          },
          {
            "name": "where",
            "in": "query",
            "description": "a JSON blob with search filters, allowed operators: $eq, $ne, $in, $nin, $gt, $lt, $gte, $lte, $exists",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "the field names that you want to restrict the results to",
            "required": false,
            "type": "string"
          },
          {
            "name": "page-size",
            "in": "query",
            "description": "the max number of results to return, if `where` is defined.",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "page-state",
            "in": "query",
            "description": "Cassandra page state, used for pagination on consecutive requests",
            "required": false,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentResponseWrapper"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "documents"
        ],
        "summary": "Create or update a document with the provided document-id",
        "description": "",
        "operationId": "putDoc",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string"
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "the name of the document",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The JSON document",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WriteDocResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete a document",
        "description": "Delete a document",
        "operationId": "deleteDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "the name of the document",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "documents"
        ],
        "summary": "Update data at the root of a document",
        "description": "Merges data at the root with requested data.",
        "operationId": "patchDoc",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string"
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "the name of the document",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The JSON document",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WriteDocResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/namespaces/{namespace-id}/collections/{collection-id}/{document-id}/{document-path}": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Get a path in a document",
        "description": "Retrieve the JSON representation of the document at a provided path, with optional search parameters.",
        "operationId": "getDocPath",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "the name of the document",
            "required": true,
            "type": "string"
          },
          {
            "name": "document-path",
            "in": "path",
            "description": "the path in the JSON that you want to retrieve",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "pattern": ".*"
          },
          {
            "name": "where",
            "in": "query",
            "description": "a JSON blob with search filters, allowed operators: $eq, $ne, $in, $nin, $gt, $lt, $gte, $lte, $exists",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "the field names that you want to restrict the results to",
            "required": false,
            "type": "string"
          },
          {
            "name": "page-size",
            "in": "query",
            "description": "the max number of results to return, if `where` is defined",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "page-state",
            "in": "query",
            "description": "Cassandra page state, used for pagination on consecutive requests",
            "required": false,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentResponseWrapper"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "documents"
        ],
        "summary": "Replace data at a path in a document",
        "description": "Removes whatever was previously present at the path",
        "operationId": "putDocPath",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string"
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "the name of the document",
            "required": true,
            "type": "string"
          },
          {
            "name": "document-path",
            "in": "path",
            "description": "the path in the JSON that you want to retrieve",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The JSON document",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WriteDocResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete a path in a document",
        "description": "Delete a path in a document",
        "operationId": "deleteDocPath",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "the name of the document",
            "required": true,
            "type": "string"
          },
          {
            "name": "document-path",
            "in": "path",
            "description": "the path in the JSON that you want to retrieve",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "pattern": ".*"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "documents"
        ],
        "summary": "Update data at a path in a document",
        "description": "Merges data at the path with requested data, assumes that the data at the path is already an object.",
        "operationId": "patchDocPath",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "the namespace that the collection is in",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "collection-id",
            "in": "path",
            "description": "the name of the collection",
            "required": true,
            "type": "string"
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "the name of the document",
            "required": true,
            "type": "string"
          },
          {
            "name": "document-path",
            "in": "path",
            "description": "the path in the JSON that you want to retrieve",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The JSON document",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WriteDocResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/schemas/namespaces/{namespace-id}": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Get a namespace",
        "description": "Return a single namespace specification.",
        "operationId": "getOneNamespace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "The namespace to use for the request.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Keyspace"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete a namespace",
        "description": "Delete a single namespace.",
        "operationId": "deleteNamespace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace-id",
            "in": "path",
            "description": "Name of the namespace to use for the request.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z_0-9]+"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/schemas/namespaces": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Get all namespaces",
        "description": "Retrieve all available namespaces.",
        "operationId": "getAllNamespaces",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseWrapper"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Create a namespace",
        "description": "Create a new namespace.",
        "operationId": "createNamespace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "A map representing a namespace with SimpleStrategy or NetworkTopologyStrategy with default replicas of 1 and 3 respectively \nSimple:\n```json\n{ \"name\": \"killrvideo\", \"replicas\": 1 }\n````\nNetwork Topology:\n```json\n{\n  \"name\": \"killrvideo\",\n   \"datacenters\":\n      [\n         { \"name\": \"dc1\", \"replicas\": 3 },\n         { \"name\": \"dc2\", \"replicas\": 3 },\n      ],\n}\n```",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/keyspaces/{keyspaceName}/tables/{tableName}/columns": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Retrieve all columns",
        "description": "Return all columns for a specified table.",
        "operationId": "listAllColumns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ColumnDefinition"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "schemas"
        ],
        "summary": "Add a column",
        "description": "Add a single column to a table.",
        "operationId": "addColumn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ColumnDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Retrieve a column",
        "description": "Return a single column specification in a specific table.",
        "operationId": "getOneColumn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "Name of the column to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "schemas"
        ],
        "summary": "Update a column",
        "description": "Update a single column in a specific table.",
        "operationId": "updateColumn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ColumnUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "schemas"
        ],
        "summary": "Delete a column",
        "description": "Delete a single column in a specific table.",
        "operationId": "deleteColumn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "Name of the column to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/keyspaces": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Return all keyspaces",
        "description": "Retrieve all available keyspaces in the specific database.",
        "operationId": "listAllKeyspaces",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/keyspaces/{keyspaceName}/tables/{tableName}/rows": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieve all rows",
        "description": "Get all rows from a table.",
        "operationId": "getAllRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Restrict the number of returned items",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageState",
            "in": "query",
            "description": "Move the cursor to a particular result",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rows"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Add row",
        "description": "Add a row to a table in your database. If the new row has the same primary key as that of an existing row, the database processes it as an update to the existing row.",
        "operationId": "addRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Row object that needs to be added to the table",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RowAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RowsResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/keyspaces/{keyspaceName}/tables/{tableName}/rows/{primaryKey}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieve rows",
        "description": "Get rows from a table based on the primary key.",
        "operationId": "getRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rows"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "data"
        ],
        "summary": "Update rows",
        "description": "Update existing rows in a table.",
        "operationId": "updateRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RowUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RowsResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data"
        ],
        "summary": "Delete rows",
        "description": "Delete individual rows from a table.",
        "operationId": "deleteRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/keyspaces/{keyspaceName}/tables/{tableName}/rows/query": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Submit queries",
        "description": "Submit queries to retrieve data from a table.",
        "operationId": "queryRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The query to be used for retrieving rows.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rows"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/keyspaces/{keyspaceName}/tables/{tableName}": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Return a table",
        "description": "Retrieve data for a single table in a specific keyspace.",
        "operationId": "getOneTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Table"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "schemas"
        ],
        "summary": "Delete a table",
        "description": "Delete a single table in the specified keyspace.",
        "operationId": "deleteTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/keyspaces/{keyspaceName}/tables": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Return all tables",
        "description": "Retrieve all tables in a specific keyspace.",
        "operationId": "listAllTables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "schemas"
        ],
        "summary": "Add a table",
        "description": "Add a table in a specific keyspace.",
        "operationId": "addTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Table object that needs to be added to the keyspace",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/keyspaces/{keyspaceName}/{tableName}/{primaryKey}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get row(s)",
        "description": "Get rows from a table based on the primary key.",
        "operationId": "getRows_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryKey",
            "in": "path",
            "description": "Value from the primary key column for the table. Define composite keys by separating values with slashes (`val1/val2...`) in the order they were defined. </br> For example, if the composite key was defined as `PRIMARY KEY(race_year, race_name)` then the primary key in the path would be `race_year/race_name` ",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "pattern": ".*"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "URL escaped, comma delimited list of keys to include",
            "required": false,
            "type": "string"
          },
          {
            "name": "page-size",
            "in": "query",
            "description": "Restrict the number of returned items",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page-state",
            "in": "query",
            "description": "Move the cursor to a particular result",
            "required": false,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Keys to sort by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetResponseWrapper"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "data"
        ],
        "summary": "Replace row(s)",
        "description": "Update existing rows in a table.",
        "operationId": "updateRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryKey",
            "in": "path",
            "description": "Value from the primary key column for the table. Define composite keys by separating values with slashes (`val1/val2...`) in the order they were defined. </br> For example, if the composite key was defined as `PRIMARY KEY(race_year, race_name)` then the primary key in the path would be `race_year/race_name` ",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "pattern": ".*"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resource updated",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data"
        ],
        "summary": "Delete row(s)",
        "description": "Delete one or more rows in a table",
        "operationId": "deleteRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryKey",
            "in": "path",
            "description": "Value from the primary key column for the table. Define composite keys by separating values with slashes (`val1/val2...`) in the order they were defined. </br> For example, if the composite key was defined as `PRIMARY KEY(race_year, race_name)` then the primary key in the path would be `race_year/race_name` ",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "pattern": ".*"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "data"
        ],
        "summary": "Update part of a row(s)",
        "description": "Perform a partial update of one or more rows in a table",
        "operationId": "patchRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryKey",
            "in": "path",
            "description": "Value from the primary key column for the table. Define composite keys by separating values with slashes (`val1/val2...`) in the order they were defined. </br> For example, if the composite key was defined as `PRIMARY KEY(race_year, race_name)` then the primary key in the path would be `race_year/race_name` ",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "pattern": ".*"
          },
          {
            "name": "raw",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "description": "document",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resource updated",
            "schema": {
              "$ref": "#/definitions/ResponseWrapper"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/keyspaces/{keyspaceName}/{tableName}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Search a table",
        "description": "Search a table using a json query as defined in the `where` query parameter",
        "operationId": "getRowWithWhere",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "where",
            "in": "query",
            "description": "URL escaped JSON query using the following keys: \n | Key | Operation | \n |-|-| \n | $lt | Less Than | \n | $lte | Less Than Or Equal To | \n | $gt | Greater Than | \n | $gte | Greater Than Or Equal To | \n | $ne | Not Equal To | \n | $in | Contained In | \n | $contains | Contains the given element (for lists or sets) or value (for maps) | \n | $containsKey | Contains the given key (for maps) | \n | $containsEntry | Contains the given key/value entry (for maps) | \n | $exists | A value is set for the key | ",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "URL escaped, comma delimited list of keys to include",
            "required": false,
            "type": "string"
          },
          {
            "name": "page-size",
            "in": "query",
            "description": "Restrict the number of returned items",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page-state",
            "in": "query",
            "description": "Move the cursor to a particular result",
            "required": false,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Keys to sort by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetResponseWrapper"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Add row",
        "description": "Add a row to a table in your database. If the new row has the same primary key as that of an existing row, the database processes it as an update to the existing row.",
        "operationId": "createRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "resource created",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}/columns": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get all columns",
        "description": "Return all columns for a specified table.",
        "operationId": "getAllColumns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseWrapper"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "schemas"
        ],
        "summary": "Create a column",
        "description": "Add a single column to a table.",
        "operationId": "createColumn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ColumnDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}/columns/{columnName}": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get a column",
        "description": "Return a single column specification in a specific table.",
        "operationId": "getOneColumn_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "column name",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ColumnDefinition"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "schemas"
        ],
        "summary": "Update a column",
        "description": "Update a single column in a specific table.",
        "operationId": "updateColumn_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ColumnDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "schemas"
        ],
        "summary": "Delete a column",
        "description": "Delete a single column in a specific table.",
        "operationId": "deleteColumn_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "column name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/schemas/keyspaces": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get all keyspaces",
        "description": "Retrieve all available keyspaces.",
        "operationId": "getAllKeyspaces",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseWrapper"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "schemas"
        ],
        "summary": "Create a keyspace",
        "description": "Create a new keyspace.",
        "operationId": "createKeyspace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "A map representing a keyspace with SimpleStrategy or NetworkTopologyStrategy with default replicas of 1 and 3 respectively \nSimple:\n```json\n{ \"name\": \"killrvideo\", \"replicas\": 1}\n````\nNetwork Topology:\n```json\n{\n  \"name\": \"killrvideo\",\n   \"datacenters\":\n      [\n         { \"name\": \"dc1\", \"replicas\": 3 },\n         { \"name\": \"dc2\", \"replicas\": 3 },\n      ],\n}\n```",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/schemas/keyspaces/{keyspaceName}": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get a keyspace",
        "description": "Return a single keyspace specification.",
        "operationId": "getOneKeyspace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Keyspace"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "schemas"
        ],
        "summary": "Delete a keyspace",
        "description": "Delete a single keyspace.",
        "operationId": "deleteKeyspace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/schemas/keyspaces/{keyspaceName}/tables": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get all tables",
        "description": "Retrieve all tables in a specific keyspace.",
        "operationId": "getAllTables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseWrapper"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "schemas"
        ],
        "summary": "Create a table",
        "description": "Add a table in a specific keyspace.",
        "operationId": "createTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/schemas/keyspaces/{keyspaceName}/tables/{tableName}": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get a table",
        "description": "Retrieve data for a single table in a specific keyspace.",
        "operationId": "getOneTable_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Unwrap results",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Table"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "schemas"
        ],
        "summary": "Replace a table definition",
        "description": "Update a single table definition, except for columns, in a keyspace.",
        "operationId": "updateTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "table name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableAdd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "resource updated",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "schemas"
        ],
        "summary": "Delete a table",
        "description": "Delete a single table in the specified keyspace.",
        "operationId": "deleteTable_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Cassandra-Token",
            "in": "header",
            "description": "The token returned from the authorization endpoint. Use this token in each request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Name of the keyspace to use for the request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to use for the request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "Invalid STRING constant (8be6d514-3436-4e04-a5fc-0ffbefa4c1fe) for \"id\" of type uuid",
          "description": "A human readable description of the error state"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 2200,
          "description": "The internal number referencing the error state"
        },
        "internalTxId": {
          "type": "string"
        }
      },
      "description": "A description of an error state"
    },
    "ResponseWrapper": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "description": "Response data returned by the request."
        }
      }
    },
    "WriteDocResponse": {
      "type": "object",
      "properties": {
        "documentId": {
          "type": "string"
        }
      }
    },
    "DocumentResponseWrapper": {
      "type": "object",
      "properties": {
        "documentId": {
          "type": "string",
          "description": "The id of the document"
        },
        "pageState": {
          "type": "string",
          "description": "A string representing the paging state to be used on future paging requests."
        },
        "data": {
          "type": "object",
          "description": "The data returned by the request"
        }
      }
    },
    "Datacenter": {
      "type": "object",
      "required": [
        "name",
        "replicas"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the datacenter."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "The number of replicas in the datacenter. In other words, the number of copies of each row in the datacenter."
        }
      }
    },
    "Keyspace": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the keyspace."
        },
        "datacenters": {
          "type": "array",
          "description": "The datacenters within a keyspace. Only applies for those keyspaces created with NetworkTopologyStrategy.",
          "items": {
            "$ref": "#/definitions/Datacenter"
          }
        }
      }
    },
    "SuccessResponse": {
      "type": "object",
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Whether the request was successful."
        }
      }
    },
    "ColumnDefinition": {
      "type": "object",
      "required": [
        "name",
        "typeDefinition"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "emailaddress",
          "description": "Name for the column, which must be unique."
        },
        "typeDefinition": {
          "type": "string",
          "example": "text",
          "description": "The type of data allowed in the column."
        },
        "static": {
          "type": "boolean",
          "description": "Denotes whether the column is shared by all rows of a partition."
        }
      }
    },
    "ColumnUpdate": {
      "type": "object",
      "properties": {
        "newName": {
          "type": "string",
          "description": "The new name of the column."
        }
      },
      "description": "Changes the name of a primary key column and preserves the existing values."
    },
    "RowsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Whether the request was successful.",
          "readOnly": true
        },
        "rowsModified": {
          "type": "integer",
          "format": "int32",
          "description": "Number of rows modified/added by the request.",
          "readOnly": true
        }
      }
    },
    "ColumnModel": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "emailaddress",
          "description": "Name for the column, which must be unique."
        },
        "value": {
          "type": "string",
          "example": "text",
          "description": "The type of data allowed in the column."
        }
      }
    },
    "RowAdd": {
      "type": "object",
      "required": [
        "columns"
      ],
      "properties": {
        "columns": {
          "type": "array",
          "description": "The column definitions belonging to the row to add.",
          "items": {
            "$ref": "#/definitions/ColumnModel"
          }
        }
      }
    },
    "Rows": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of records being returned by the request.",
          "readOnly": true
        },
        "pageState": {
          "type": "string",
          "description": "A string representing the paging state to be used on future paging requests.",
          "readOnly": true
        },
        "rows": {
          "type": "array",
          "description": "The rows returned by the request.",
          "readOnly": true,
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      }
    },
    "Changeset": {
      "type": "object",
      "required": [
        "column",
        "value"
      ],
      "properties": {
        "column": {
          "type": "string",
          "example": "firstName",
          "description": "Name of the column to update."
        },
        "value": {
          "type": "string",
          "example": "Joe",
          "description": "The value to update in the column for all matching rows."
        }
      }
    },
    "RowUpdate": {
      "type": "object",
      "required": [
        "changeset"
      ],
      "properties": {
        "changeset": {
          "type": "array",
          "description": "The values for the named parameters used in the setExpression field",
          "items": {
            "$ref": "#/definitions/Changeset"
          }
        }
      }
    },
    "ClusteringExpression": {
      "type": "object",
      "required": [
        "column",
        "order"
      ],
      "properties": {
        "order": {
          "type": "string",
          "description": "The clustering order",
          "readOnly": true,
          "enum": [
            "asc",
            "desc"
          ]
        },
        "column": {
          "type": "string",
          "description": "The name of the column to order by"
        }
      }
    },
    "Filter": {
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string",
          "description": "The column name to apply the filter to."
        },
        "operator": {
          "type": "string",
          "description": "The comparison operator to use in the filter.",
          "enum": [
            "eq",
            "notEq",
            "gt",
            "gte",
            "lt",
            "lte",
            "in"
          ]
        },
        "value": {
          "type": "array",
          "description": "An array of values to use in the filter. The full array will only be used for the `in` operation, for all others only the first element will be considered.",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Query": {
      "type": "object",
      "required": [
        "filters"
      ],
      "properties": {
        "columnNames": {
          "type": "array",
          "description": "A list of column names to return in the result set. An empty array returns all columns.",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "type": "array",
          "description": "An array of filters to return results for, separated by `AND`. For example, `a > 1 AND b != 1`.",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "orderBy": {
          "description": "The clustering order for rows returned.",
          "$ref": "#/definitions/ClusteringExpression"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the page to return in the result set."
        },
        "pageState": {
          "type": "string",
          "description": "A string returned from previous query requests representing the paging state."
        }
      }
    },
    "Column": {
      "type": "object",
      "properties": {
        "collection": {
          "type": "boolean"
        },
        "primaryKeyComponent": {
          "type": "boolean"
        },
        "partitionKey": {
          "type": "boolean"
        },
        "clusteringKey": {
          "type": "boolean"
        },
        "frozenCollection": {
          "type": "boolean"
        }
      }
    },
    "Table": {
      "type": "object",
      "properties": {
        "requiredIndexColumns": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Column"
          }
        },
        "optionalIndexColumns": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Column"
          }
        }
      }
    },
    "PrimaryKey": {
      "type": "object",
      "required": [
        "partitionKey"
      ],
      "properties": {
        "partitionKey": {
          "type": "array",
          "description": "Name of the column(s) that constitute the partition key.",
          "items": {
            "type": "string"
          }
        },
        "clusteringKey": {
          "type": "array",
          "description": "Name of the column or columns that constitute the clustering key.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Defines a column list for the primary key. Can be either a single column, compound primary key, or composite partition key. Provide multiple columns for the partition key to define a composite partition key."
    },
    "TableAdd": {
      "type": "object",
      "required": [
        "columnDefinitions",
        "name",
        "primaryKey"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the table to add."
        },
        "primaryKey": {
          "description": "The primary key definition of the table, consisting of partition and clustering keys.",
          "$ref": "#/definitions/PrimaryKey"
        },
        "columnDefinitions": {
          "type": "array",
          "description": "Definition of columns that belong to the table to be added.",
          "items": {
            "$ref": "#/definitions/ColumnDefinition"
          }
        },
        "ifNotExists": {
          "type": "boolean",
          "description": "Determines whether to create a new table if a table with the same name exists. Attempting to create an existing table returns an error unless this option is true."
        },
        "tableOptions": {
          "description": "The set of table options to apply to the table when creating.",
          "$ref": "#/definitions/TableOptions"
        }
      }
    },
    "TableOptions": {
      "type": "object",
      "properties": {
        "defaultTimeToLive": {
          "type": "integer",
          "format": "int32",
          "description": "Defines the Time To Live (TTL), which determines the time period (in seconds) to expire data. If the value is >0, TTL is enabled for the entire table and an expiration timestamp is added to each column. The maximum value is 630720000 (20 years). A new TTL timestamp is calculated each time the data is updated and the row is removed after the data expires."
        },
        "clusteringExpression": {
          "type": "array",
          "description": "Order rows storage to make use of the on-disk sorting of columns. Specifying order can make query results more efficient.",
          "items": {
            "$ref": "#/definitions/ClusteringExpression"
          }
        }
      }
    },
    "GetResponseWrapper": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The count of records returned"
        },
        "pageState": {
          "type": "string",
          "description": "A string representing the paging state to be used on future paging requests."
        },
        "data": {
          "type": "object",
          "description": "The data returned by the request"
        }
      }
    }
  }
}
